{"version":3,"sources":["../src/createpost_modal.js"],"names":["define","$","Notification","CustomEvents","Modal","ModalRegistry","Ajax","registered","SELECTORS","SAVE_BUTTON","CANCEL_BUTTON","CreatePostModal","root","call","TYPE","prototype","Object","create","constructor","registerEventListeners","getModal","on","events","activate","message","val","length","addClass","removeClass","postbtn","request","methodname","args","post","courseid","data","done","document","location","reload","bind","fail","error","addNotification","type","hide","destroy","register"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Create post modal js.\n *\n * @package    format_timeline\n * @copyright  2020 onwards Willian Mano {@link http://conecti.me}\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\ndefine(['jquery', 'core/notification', 'core/custom_interaction_events', 'core/modal', 'core/modal_registry', 'core/ajax'],\n    function($, Notification, CustomEvents, Modal, ModalRegistry, Ajax) {\n        var registered = false;\n        var SELECTORS = {\n            SAVE_BUTTON: '[data-action=\"save\"]',\n            CANCEL_BUTTON: '[data-action=\"cancel\"]'\n        };\n\n        /**\n         * Constructor for the Modal.\n         *\n         * @param {object} root The root jQuery element for the modal\n         */\n        var CreatePostModal = function(root) {\n            Modal.call(this, root);\n        };\n\n        CreatePostModal.TYPE = 'format_timeline-create_post_modal';\n        CreatePostModal.prototype = Object.create(Modal.prototype);\n        CreatePostModal.prototype.constructor = CreatePostModal;\n\n        /**\n         * Set up all of the event handling for the modal.\n         *\n         * @method registerEventListeners\n         */\n        CreatePostModal.prototype.registerEventListeners = function() {\n            // Apply parent event listeners.\n            Modal.prototype.registerEventListeners.call(this);\n\n            this.getModal().on(CustomEvents.events.activate, SELECTORS.SAVE_BUTTON, function() {\n                var message = $('#post-message').val();\n\n                if (message === '' || message.length < 10) {\n                    $('#post-message').addClass('is-invalid');\n                    $('#post-message-feedback').removeClass('d-none');\n\n                    return;\n                }\n\n                var postbtn = $(\"#create-post-btn\");\n                var request = Ajax.call([{\n                    methodname: 'format_timeline_createpost',\n                    args: {\n                        post: {\n                            courseid: postbtn.data('courseid'),\n                            message: $('#post-message').val()\n                        }\n                    }\n                }]);\n\n                request[0].done(function() {\n                    document.location.reload(true);\n                }.bind(this)).fail(function(error) {\n                    var message = error.message;\n\n                    if (!message) {\n                        message = error.error;\n                    }\n\n                    Notification.addNotification({\n                        message: message,\n                        type: 'error'\n                    });\n\n                    this.hide();\n\n                    this.destroy();\n                }.bind(this));\n            }.bind(this));\n\n            this.getModal().on(CustomEvents.events.activate, SELECTORS.CANCEL_BUTTON, function() {\n                this.hide();\n                this.destroy();\n            }.bind(this));\n        };\n\n        // Automatically register with the modal registry the first time this module is imported so that you can create modals\n        // of this type using the modal factory.\n        if (!registered) {\n            ModalRegistry.register(CreatePostModal.TYPE, CreatePostModal, 'format_timeline/createpost_modal');\n            registered = true;\n        }\n\n        return CreatePostModal;\n    });"],"file":"createpost_modal.min.js"}